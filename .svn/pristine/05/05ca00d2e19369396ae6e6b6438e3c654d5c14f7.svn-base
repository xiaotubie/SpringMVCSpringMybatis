<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.xbwl.demo.repository.role.RoleMyBatisDao">
	
	<select id="findAllRoles" parameterType="string" resultType="Role">
		select r.id, 
			   r.role_name roleName
		from ss_role r 
		where r.state = 1
		<if test="_parameter == 1">
			and r.role_code != 'admin'
		</if>
		order by r.id ASC
	</select>
	
	<select id="findByCode" parameterType="string" resultType="Role">
		select id, 
			   role_code roleCode, 
			   role_name roleName,
			   state
		from ss_role
		where role_code=#{code}
	</select>
	
	<select id="findAll" parameterType="map" resultType="Role">
		select r.id, 
			   r.role_code roleCode, 
			   r.role_name roleName, 
			   r.create_date createDate, 
			   r.update_date updateDate, 
			   r.create_id createId, 
			   r.update_id updateId,
			   r.state, 
			   createUser.name createName, 
			   updateUser.name updateName  
		from ss_role r 
		left join ss_user createUser on r.create_id = createUser.id
		left join ss_user updateUser on r.update_id = updateUser.id
		<if test="name != null">
			where r.role_name like '%${name}%'
		</if>
		order by r.id ASC
	</select>
	
	<select id="findOne" parameterType="long" resultType="Role">
		select id, 
			   role_code roleCode, 
			   role_name roleName,
			   state
		from ss_role
		where id=#{id}
	</select>
		
	<insert id="save" parameterType="Role">
		insert into ss_role (id, 
							 role_code, 
							 role_name, 
							 create_date, 
							 create_id, 
							 state)
		values (SS_SEQ_ROLE.nextval,
							 #{roleCode},  
							 #{roleName}, 
							 #{createDate}, 
							 #{createId}, 
							 #{state})
	</insert>
	
	<update id="update" parameterType="Role">
		update ss_role set role_code=#{roleCode}, 
						   role_name=#{roleName},
						   update_date=#{updateDate},
						   update_id=#{updateId},
						   state=#{state} 
		where id = #{id}
	</update>
	
	<delete id="delete" parameterType="java.util.List">
	    delete from ss_role where id in 
	    <foreach collection="list" index="i" item="id" open="(" separator="," close=")"> 
	       #{id} 
	    </foreach>
	</delete>

	<update id="recover"  parameterType="map">
		update ss_role set state=${state} 
		where id = ${id}
	</update>
</mapper> 
