<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.xbwl.demo.repository.UserMyBatisDao">
 
	<select id="findOne" parameterType="long" resultType="User">
		select id, name, 
		login_name as loginName,
		password, roles, salt,
		register_date as registerDate
		from ss_user
		where id=#{id}
	</select>
	
	<select id="findAll"  resultType="User">
		select id, name,
		login_name as loginName,
		password, roles, salt,
		register_date as registerDate
		from ss_user
		order by id ASC
	</select>
	
	<select id="findByLoginName" parameterType="string" resultType="User">
		select u.id, 
			u.name, 
			u.login_name as loginName,
			u.password, 
	    	u.roles, 
	    	u.salt,
			u.register_date as registerDate,
	   	 	u.state,
	    	r.role_code roleCode
		from ss_user u
    	left join ss_role r
    	on u.roles = r.id
		where login_name=#{LoginName}
	</select>
	
	<insert id="save" parameterType="User">
		insert into ss_user (
			id, name,  login_name, password, roles, salt, register_date)
		values (
			SS_SEQ_USER.nextval, #{name},  #{loginName}, #{password}, #{roles}, #{salt}, #{registerDate}
			)
	</insert>
	
	<update id="update" parameterType="User">
		update ss_user1 set login_name=#{loginName}, name=#{name},password=#{password},
		      register_date=#{registerDate} where id = #{id}
	</update>
	
	<delete id="delete" parameterType="long">
	     delete from ss_user1 where id=#{id}
	</delete>
	
</mapper> 
